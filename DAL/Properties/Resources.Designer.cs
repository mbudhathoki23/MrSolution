//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MrDAL.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MrDAL.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRUNCATE TABLE AMS.ModuleDescription;
        ///INSERT INTO AMS.ModuleDescription (Module, ModuleType)
        ///VALUES
        ///(&apos;COA&apos;, N&apos;CHARTS OF ACCOUNT OPENING&apos;),
        ///(&apos;OB&apos;, N&apos;OPENING BALANCE&apos;),
        ///(&apos;LOB&apos;, N&apos;OPENING BALANCE&apos;),
        ///(&apos;POB&apos;, N&apos;PRODUCT OPENING&apos;),
        ///(&apos;PDC&apos;, N&apos;POST DATED CHEQUE&apos;),
        ///(&apos;JV&apos;, N&apos;JOURNAL VOUCHER&apos;),
        ///(&apos;CV&apos;, N&apos;CASH BANK VOUCHER&apos;),
        ///(&apos;CB&apos;, N&apos;CASH BANK VOUCHER&apos;),
        ///(&apos;DN&apos;, N&apos;DEBIT NOTE&apos;),
        ///(&apos;CN&apos;, N&apos;CREDIT NOTE&apos;),
        ///(&apos;PIN&apos;, N&apos;PURCHASE INDENT&apos;),
        ///(&apos;PQ&apos;, N&apos;PURCHASE QUOTATION&apos;),
        ///(&apos;PO&apos;, N&apos;PURCHASE ORDER&apos;),
        ///(&apos;GIT&apos;, N&apos;GOODS IN [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AddModuleDescription {
            get {
                return ResourceManager.GetString("AddModuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///IF (EXISTS (  SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS  ifc WHERE TABLE_NAME = &apos;SystemSetting&apos; and ifc.COLUMN_NAME = &apos;AmountFormat&apos; AND ifc.DATA_TYPE = &apos;float&apos;))
        ///BEGIN
        ///   ALTER TABLE AMS.SystemSetting ALTER COLUMN AmountFormat NVARCHAR(10);
        ///END;
        ///
        ///IF (EXISTS (  SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS  ifc WHERE TABLE_NAME = &apos;SystemSetting&apos; and ifc.COLUMN_NAME = &apos;QtyFormat&apos; AND ifc.DATA_TYPE = &apos;float&apos;))
        ///BEGIN
        ///   ALTER TABLE AMS.SystemSetting ALTER COLUMN Qty [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AlterColumnType {
            get {
                return ResourceManager.GetString("AlterColumnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF COL_LENGTH(&apos;AUD.AUDIT_PC_DETAILS&apos;, &apos;Free_Unit_Id&apos;) IS NOT NULL BEGIN
        ///    ALTER TABLE AUD.AUDIT_PC_DETAILS ALTER COLUMN Free_Unit_Id INT NULL;
        ///END;
        ///IF COL_LENGTH(&apos;AMS.ProductGroup&apos;, &apos;PurchaseLedgerId&apos;) IS NULL BEGIN
        ///    ALTER TABLE AMS.ProductGroup
        ///    ADD [PurchaseLedgerId] [BIGINT] NULL, [PurchaseReturnLedgerId] [BIGINT] NULL, [SalesLedgerId] [BIGINT] NULL, [SalesReturnLedgerId] [BIGINT] NULL, [OpeningStockLedgerId] [BIGINT] NULL, [ClosingStockLedgerId] [BIGINT] NULL, [StockInHandLedgerId] [BIGINT] [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AlterDatabaseTableQuery {
            get {
                return ResourceManager.GetString("AlterDatabaseTableQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(&apos;VM.VIEW_COMPANY_PROFILES&apos;) IS NOT NULL
        ///BEGIN
        ///	EXECUTE (&apos;
        ///	ALTER VIEW VM.VIEW_COMPANY_PROFILES
        ///	AS
        ///	SELECT Database_Name DATABASE_ID, ISNULL(PrintDesc,Company_Name) AS COMPANY_DESC, Company_Logo lOGO, CReg_Date REGISTRATION_DATE, Address COMPANY_ADDRESS, Country COMPANY_COUNTRY, State COMPANY_STATE, City COMPANY_CITY, PhoneNo COMPANY_OFFICE_NUMBER, Fax COMPANY_FAX_NO, Pan_No COMPANY_TPAN_OR_VAT, Email COMPANY_EMAIL, Website COMPANY_WEBSITE
        ///	FROM AMS.CompanyInfo;&apos;);
        ///END;
        ///
        ///IF OBJECT_ID(&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AlterViewTableQuery {
            get {
                return ResourceManager.GetString("AlterViewTableQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(&apos;[AUD].[AUDIT_ACCOUNT_GROUP]&apos;) IS  NULL CREATE TABLE [AUD].[AUDIT_ACCOUNT_GROUP]([GrpId] [int] NOT NULL,[PrimaryGroupId] [int] NULL CONSTRAINT [DF__AccountGr__Prima__22A65A4F]  DEFAULT ((0)),[GrpName] [nvarchar](200) NOT NULL,[GrpCode] [nvarchar](50) NOT NULL,[Schedule] [int] NOT NULL CONSTRAINT [DF_AccountGroup_Schedule]  DEFAULT ((1)),[PrimaryGrp] [nvarchar](50) NOT NULL,[GrpType] [nvarchar](50) NOT NULL,[IsDefault] [char](1) NULL CONSTRAINT [DF__AccountGr__IsDef__239A7E88]  DEFAULT ((0)),[Ne [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AuditLogTableQuery {
            get {
                return ResourceManager.GetString("AuditLogTableQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(&apos;AMS.CompanyInfo&apos;) IS NULL BEGIN
        ///    CREATE TABLE [AMS].[CompanyInfo] ([Company_Id] [TINYINT]       IDENTITY(1, 1) NOT NULL,
        ///        [Company_Name]                             [NVARCHAR](200) NOT NULL,
        ///        [PrintDesc]                                [NVARCHAR](200) NOT NULL,
        ///        [Company_Logo]                             [IMAGE]         NULL,
        ///        [CReg_Date]                                [DATE]          NULL,
        ///        [Address]                                  [NVARCHAR](200) N [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CreateDatabaseTableQuery {
            get {
                return ResourceManager.GetString("CreateDatabaseTableQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT s.name FROM sys.schemas s WHERE s.name=&apos;AMS&apos;)BEGIN
        ///    DECLARE @AMS NVARCHAR(MAX);
        ///    SET @AMS=N&apos;CREATE SCHEMA AMS AUTHORIZATION dbo;&apos;;
        ///    EXEC sys.sp_executesql @AMS;
        ///END;
        ///IF OBJECT_ID(&apos;AMS.BR_LOG&apos;) IS NULL BEGIN
        ///    CREATE TABLE [AMS].[BR_LOG] ([DB_NAME] [VARCHAR](50)  NOT NULL,
        ///        [COMPANY]                          [VARCHAR](50)  NOT NULL,
        ///        [LOCATION]                         [VARCHAR](200) NOT NULL,
        ///        [USED_BY]                          [VARCHAR](50)  NOT [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CreateMasterTableQuery {
            get {
                return ResourceManager.GetString("CreateMasterTableQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT s.name FROM sys.schemas s WHERE s.name=&apos;CTRL&apos;)BEGIN
        ///    DECLARE @CTRL NVARCHAR(MAX);
        ///    SET @CTRL=N&apos;CREATE SCHEMA CTRL AUTHORIZATION dbo;&apos;;
        ///    EXEC sys.sp_executesql @CTRL;
        ///END;
        ///IF NOT EXISTS (SELECT s.name FROM sys.schemas s WHERE s.name=&apos;AMS&apos;)BEGIN
        ///    DECLARE @AMS NVARCHAR(MAX);
        ///    SET @AMS=N&apos;CREATE SCHEMA AMS AUTHORIZATION dbo;&apos;;
        ///    EXEC sys.sp_executesql @AMS;
        ///END;
        ///IF NOT EXISTS (SELECT s.name FROM sys.schemas s WHERE s.name=&apos;AUD&apos;)BEGIN
        ///    DECLARE @AUD NVARCHAR(MAX [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CreateSchemaInDatabase {
            get {
                return ResourceManager.GetString("CreateSchemaInDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(&apos;VM.VIEW_COMPANY_PROFILES&apos;) IS NULL BEGIN
        ///    EXECUTE(&apos;CREATE VIEW VM.VIEW_COMPANY_PROFILES as Select Database_Name DATABASE_ID,Company_Name as COMPANY_DESC,Company_Logo lOGO,CReg_Date REGISTRATION_DATE,Address COMPANY_ADDRESS,Country COMPANY_COUNTRY,State COMPANY_STATE,City COMPANY_CITY,PhoneNo COMPANY_OFFICE_NUMBER, Fax COMPANY_FAX_NO,Pan_No COMPANY_TPAN_OR_VAT, Email COMPANY_EMAIL, Website COMPANY_WEBSITE from AMS.CompanyInfo &apos;);
        ///END;
        ///IF OBJECT_ID(&apos;VM.VIEW_JOURNAL_VOUCHER&apos;) IS NULL BEGIN        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CreateViewTableQuery {
            get {
                return ResourceManager.GetString("CreateViewTableQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT s.name FROM sys.schemas s WHERE s.name=&apos;CRM&apos;)BEGIN
        ///    DECLARE @CRM NVARCHAR(MAX);
        ///    SET @CRM=N&apos;CREATE SCHEMA CRM AUTHORIZATION dbo;&apos;;
        ///    EXEC sys.sp_executesql @CRM;
        ///END;
        ///IF OBJECT_ID(&apos;CRM.ClientCollection&apos;) IS NULL BEGIN
        ///    CREATE TABLE [CRM].[ClientCollection] ([ClientId] [BIGINT] NOT NULL,
        ///    [ClientDescription] [NVARCHAR](255) NOT NULL,
        ///    [PanNo] [NUMERIC](9, 0) NULL,
        ///    [ClientAddress] [NVARCHAR](255) NULL,
        ///    [EmailAddress] [NVARCHAR](50) NULL,
        ///    [ContactNo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CrmCreateTable {
            get {
                return ResourceManager.GetString("CrmCreateTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRUNCATE TABLE AMS.DateMiti;
        ///INSERT INTO AMS.datemiti
        ///VALUES (1, N&apos;2000/09/18&apos;, N&apos;18/09/2000&apos;, N&apos;1944-01-02&apos;, N&apos;Poush&apos;, N&apos;January&apos;, N&apos;Sunday&apos;, NULL, N&apos;NO&apos;),
        ///(2, N&apos;2000/09/19&apos;, N&apos;19/09/2000&apos;, N&apos;1944-01-03&apos;, N&apos;Poush&apos;, N&apos;January&apos;, N&apos;Monday&apos;, NULL, N&apos;NO&apos;),
        ///(3, N&apos;2000/09/20&apos;, N&apos;20/09/2000&apos;, N&apos;1944-01-04&apos;, N&apos;Poush&apos;, N&apos;January&apos;, N&apos;Tuesday&apos;, NULL, N&apos;NO&apos;),
        ///(4, N&apos;2000/09/21&apos;, N&apos;21/09/2000&apos;, N&apos;1944-01-05&apos;, N&apos;Poush&apos;, N&apos;January&apos;, N&apos;Wednesday&apos;, NULL, N&apos;NO&apos;),
        ///(5, N&apos;2000/09/22&apos;, N&apos;22/09/2000&apos;, N&apos;1944-01-06&apos;, N&apos;Poush&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DefaultDateMiti {
            get {
                return ResourceManager.GetString("DefaultDateMiti", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///TRUNCATE TABLE AMS.DllPrintDesigList
        ///INSERT INTO AMS.DllPrintDesigList(ListId, Module, DesignDesc)
        ///VALUES(1, &apos;SB&apos;, &apos;A4 Half PAN&apos;),
        ///	  (2, &apos;SB&apos;, &apos;Sales A4 Half&apos;),
        ///	  (3, &apos;SB&apos;, &apos;Sales A4 HalfPAN&apos;),
        ///	  (4, &apos;SB&apos;, &apos;Sales A5&apos;),
        ///	  (5, &apos;SB&apos;, &apos;Sales A5 PAN&apos;),
        ///	  (6, &apos;SB&apos;, &apos;Sales Invoice&apos;),
        ///	  (7, &apos;SB&apos;, &apos;Sales Invoice FNB&apos;),
        ///	  (8, &apos;SB&apos;, &apos;FNB Invoice 3inch&apos;),
        ///	  (9, &apos;SB&apos;, &apos;TaxInvoice3inch&apos;),
        ///	  (10, &apos;SB&apos;, &apos;TaxInvoice5inch&apos;),
        ///	  (11, &apos;SB&apos;, &apos;Invoice3inch&apos;),
        ///	  (12, &apos;SB&apos;, &apos;DefaultInvoice&apos;),
        ///	  (13, &apos;SB&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DefaultDesign {
            get {
                return ResourceManager.GetString("DefaultDesign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS ( SELECT * FROM AMS.FiscalYear)
        ///INSERT INTO AMS.FiscalYear(FY_Id, AD_FY, BS_FY, Current_FY, Start_ADDate, End_ADDate, Start_BSDate, End_BSDate)
        ///SELECT FiscalYearId, ADFiscalYear, BSFiscalYear, DefaultYear, StartADDate, EndADDate, StartBSDate, EndBSDate FROM master.AMS.FiscalYear
        ///
        ///IF NOT EXISTS ( SELECT * FROM AMS.Branch)
        ///INSERT INTO AMS.Branch(Branch_ID, NepaliDesc, Branch_Name, Branch_Code, Reg_Date, Address, Country, State, City, PhoneNo, Fax, Email, ContactPerson, ContactPersonAdd, Con [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DefaultValueInDatabase {
            get {
                return ResourceManager.GetString("DefaultValueInDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRANSACTION;
        ///CREATE TABLE IF NOT EXISTS &quot;IssueReport&quot; (
        ///	&quot;id&quot;	guid NOT NULL,
        ///	&quot;created_on&quot;	DATETIME NOT NULL,
        ///	&quot;synced_on&quot;	DATETIME,
        ///	&quot;title&quot;	TEXT NOT NULL,
        ///	&quot;issue_type&quot;	VARCHAR(20) NOT NULL,
        ///	&quot;frequency&quot;	VARCHAR(20) NOT NULL,
        ///	&quot;person_identity&quot;	VARCHAR(100),
        ///	&quot;description&quot;	TEXT,
        ///	&quot;steps_to_produce&quot;	TEXT,
        ///	&quot;machine&quot;	VARCHAR(50) NOT NULL,
        ///	&quot;machine_user&quot;	VARCHAR(50) NOT NULL,
        ///	&quot;client_id&quot;	guid,
        ///	&quot;last_update_on&quot;	DATETIME,
        ///	&quot;other_data&quot;	TEXT,
        ///	&quot;error_msg&quot;	TEXT,
        ///	&quot;error_dump&quot;	TEXT,
        ///	PR [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LauncherSqlite {
            get {
                return ResourceManager.GetString("LauncherSqlite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources.
        /// </summary>
        public static string String {
            get {
                return ResourceManager.GetString("String", resourceCulture);
            }
        }
    }
}
