IF NOT EXISTS (SELECT s.name FROM sys.schemas s WHERE s.name='CRM')BEGIN
    DECLARE @CRM NVARCHAR(MAX);
    SET @CRM=N'CREATE SCHEMA CRM AUTHORIZATION dbo;';
    EXEC sys.sp_executesql @CRM;
END;
IF OBJECT_ID('CRM.ClientCollection') IS NULL BEGIN
    CREATE TABLE [CRM].[ClientCollection] ([ClientId] [BIGINT] NOT NULL,
    [ClientDescription] [NVARCHAR](255) NOT NULL,
    [PanNo] [NUMERIC](9, 0) NULL,
    [ClientAddress] [NVARCHAR](255) NULL,
    [EmailAddress] [NVARCHAR](50) NULL,
    [ContactNo] [NVARCHAR](50) NULL,
    [PhoneNo] [NVARCHAR](50) NULL,
    [CollectionSource] [NVARCHAR](50) NULL,
    [Status] [BIT] NOT NULL,
    [EnterBy] [NVARCHAR](50) NOT NULL,
    [EnterDate] [DATETIME] NOT NULL,
    CONSTRAINT [PK_ClientCollection] PRIMARY KEY CLUSTERED([ClientId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
    CREATE UNIQUE NONCLUSTERED INDEX [IX_ClientCollection]
    ON [CRM].[ClientCollection]([ClientDescription] ASC)
    WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, SORT_IN_TEMPDB=OFF, IGNORE_DUP_KEY=OFF, DROP_EXISTING=OFF, ONLINE=OFF, ALLOW_ROW_LOCKS=ON, ALLOW_PAGE_LOCKS=ON)
    ON [PRIMARY];
END;
IF OBJECT_ID('CRM.RoleUser') IS NULL BEGIN
    CREATE TABLE [CRM].[RoleUser] ([RoleUserId] [INT] NOT NULL,
    [RoleUser] [NVARCHAR](50) NOT NULL,
    [UserEmail] [NVARCHAR](50) NULL,
    [UserNumber] [NVARCHAR](50) NULL,
    [Status] [BIT] NOT NULL,
    [EnterBy] [NVARCHAR](50) NOT NULL,
    [EnterDate] [DATETIME] NOT NULL,
    CONSTRAINT [PK_RoleUser] PRIMARY KEY CLUSTERED([RoleUserId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
    CREATE UNIQUE NONCLUSTERED INDEX [IX_RoleUser]
    ON [CRM].[RoleUser]([RoleUser] ASC)
    WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, SORT_IN_TEMPDB=OFF, IGNORE_DUP_KEY=OFF, DROP_EXISTING=OFF, ONLINE=OFF, ALLOW_ROW_LOCKS=ON, ALLOW_PAGE_LOCKS=ON)
    ON [PRIMARY];
END;
IF OBJECT_ID('CRM.RoleAssign') IS NULL BEGIN
    CREATE TABLE [CRM].[RoleAssign] ([AssignId] [INT] NOT NULL,
    [UserRoleId] [INT] NOT NULL,
    [LoingUser] [NVARCHAR](50) NOT NULL,
    [IsActive] [BIT] NOT NULL,
    [EnterBy] [NVARCHAR](50) NOT NULL,
    [EnterDate] [DATETIME] NOT NULL,
    CONSTRAINT [PK_RoleAssign] PRIMARY KEY CLUSTERED([AssignId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
    ALTER TABLE [CRM].[RoleAssign] WITH CHECK
    ADD CONSTRAINT [FK_RoleAssign_RoleUser] FOREIGN KEY([UserRoleId])REFERENCES [CRM].[RoleUser]([RoleUserId]);
    ALTER TABLE [CRM].[RoleAssign] CHECK CONSTRAINT [FK_RoleAssign_RoleUser];
END;
IF OBJECT_ID('CRM.TaskType') IS NULL BEGIN
    CREATE TABLE [CRM].[TaskType] ([TaskTypeId] [INT] NOT NULL,
    [TaskType] [NVARCHAR](50) NOT NULL,
    [IsActive] [BIT] NOT NULL,
    [EnterBy] [NVARCHAR](50) NOT NULL,
    [EnterDate] [DATETIME] NOT NULL,
    CONSTRAINT [PK_TaskType] PRIMARY KEY CLUSTERED([TaskTypeId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
END;
IF OBJECT_ID('CRM.TaskStatus') IS NULL BEGIN
    CREATE TABLE [CRM].[TaskStatus] ([TaskStatusId] [INT] NOT NULL,
    [TaskStatus] [NVARCHAR](50) NOT NULL,
    [IsActive] [BIT] NOT NULL,
    [EnterBy] [NVARCHAR](50) NOT NULL,
    [EnterDate] [DATETIME] NOT NULL,
    CONSTRAINT [PK_TaskStatus] PRIMARY KEY CLUSTERED([TaskStatusId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
END;
IF OBJECT_ID('CRM.TaskManagement') IS NULL BEGIN
    CREATE TABLE [CRM].[TaskManagement] ([TaskId] [BIGINT] NOT NULL,
    [RoleUserId] [INT] NOT NULL,
    [ClientId] [BIGINT] NOT NULL,
    [TaskTypeId] [INT] NOT NULL,
    [TaskStatusId] [INT] NOT NULL,
    [Remarks] [NVARCHAR](1024) NOT NULL,
    [Status] [BIT] NOT NULL,
    [EnterBy] [NVARCHAR](50) NOT NULL,
    [EnterDate] [DATETIME] NOT NULL,
    CONSTRAINT [PK_TaskManagement] PRIMARY KEY CLUSTERED([TaskId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
    ALTER TABLE [CRM].[TaskManagement] WITH CHECK
    ADD CONSTRAINT [FK_TaskManagement_ClientCollection] FOREIGN KEY([ClientId])REFERENCES [CRM].[ClientCollection]([ClientId]);
    ALTER TABLE [CRM].[TaskManagement] CHECK CONSTRAINT [FK_TaskManagement_ClientCollection];
    ALTER TABLE [CRM].[TaskManagement] WITH CHECK
    ADD CONSTRAINT [FK_TaskManagement_RoleUser] FOREIGN KEY([RoleUserId])REFERENCES [CRM].[RoleUser]([RoleUserId]);
    ALTER TABLE [CRM].[TaskManagement] CHECK CONSTRAINT [FK_TaskManagement_RoleUser];
    ALTER TABLE [CRM].[TaskManagement] WITH CHECK
    ADD CONSTRAINT [FK_TaskManagement_TaskType] FOREIGN KEY([TaskTypeId])REFERENCES [CRM].[TaskType]([TaskTypeId]);
    ALTER TABLE [CRM].[TaskManagement] CHECK CONSTRAINT [FK_TaskManagement_TaskType];
END;
IF OBJECT_ID('CRM.ClientSource') IS NULL BEGIN
    CREATE TABLE [CRM].[ClientSource] ([SourceId] [INT] NOT NULL,
    [SDescription] [NVARCHAR](255) NOT NULL,
    [IsActive] [BIT] NOT NULL,
    [EnterBy] [NVARCHAR](50) NOT NULL,
    [EnterDate] [DATETIME] NOT NULL,
    CONSTRAINT [PK_ClientSource] PRIMARY KEY CLUSTERED([SourceId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
    CREATE UNIQUE NONCLUSTERED INDEX [IX_ClientSource]
    ON [CRM].[ClientSource]([SDescription] ASC)
    WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, SORT_IN_TEMPDB=OFF, IGNORE_DUP_KEY=OFF, DROP_EXISTING=OFF, ONLINE=OFF, ALLOW_ROW_LOCKS=ON, ALLOW_PAGE_LOCKS=ON);
END;

IF OBJECT_ID('CRM.LicenseMapMaster') IS NULL BEGIN
    CREATE TABLE [CRM].[LicenseMapMaster] ([MapId] [INT] IDENTITY(1, 1) NOT NULL,
    [LedgerId] [BIGINT] NOT NULL,
    [RegistrationId] [UNIQUEIDENTIFIER] NOT NULL,
    [EnterBy] [NVARCHAR](50) NULL,
    [EnterDate] [DATETIME] NULL,
    CONSTRAINT [PK_LicenseMapMaster] PRIMARY KEY CLUSTERED([MapId] ASC)WITH(PAD_INDEX=OFF, STATISTICS_NORECOMPUTE=OFF, IGNORE_DUP_KEY=OFF, ALLOW_ROW_LOCKS= ON, ALLOW_PAGE_LOCKS=ON)ON [PRIMARY])ON [PRIMARY];
END;