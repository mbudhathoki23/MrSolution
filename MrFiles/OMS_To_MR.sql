INSERT INTO AMS.AccountGroup(GrpId, NepaliDesc, GrpName, GrpCode, Schedule, PrimaryGrp, GrpType, Branch_ID, Company_Id, Status, EnterBy, EnterDate, PrimaryGroupId, IsDefault, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY ag.GrpDesc) GrpId, ag.GrpDesc NepaliDesc, ag.GrpDesc GrpName, GrpCode, ag.GrpSchedule Schedule, CASE WHEN ag.PrimaryGrp IN ('Liabilities', 'Assets') THEN 'BS' ELSE 'PL' END PrimaryGrp, SUBSTRING(ag.PrimaryGrp, 1, 1) GrpType, 1 Branch_ID, NULL Company_Id, 1 Status, 'MrSolution' EnterBy, GETDATE() EnterDate, NULL PrimaryGroupId, 0 IsDefault, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.AccountGroup ag
WHERE ag.GrpDesc NOT IN(SELECT GrpName FROM AMS.AccountGroup);
INSERT INTO AMS.Currency(CId, NepaliDesc, CName, CCode, CRate, Branch_ID, Company_Id, Status, IsDefault, EnterBy, EnterDate, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY c.CurrDesc) CId, c.CurrDesc NepaliDesc, c.CurrDesc CName, c.CurrCode CCode, c.CurrRate CRate, 1 Branch_ID, NULL Company_Id, 1 Status, 0 IsDefault, 'MrSolution' EnterBy, GETDATE() EnterDate, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.currency c
WHERE c.CurrDesc NOT IN(SELECT CName FROM AMS.Currency);
INSERT INTO AMS.GeneralLedger(GLID, NepaliDesc, GLName, GLCode, ACCode, GLType, GrpId, PrimaryGroupId, SubGrpId, PrimarySubGroupId, PanNo, AreaId, AgentId, CurrId, CrDays, CrLimit, CrTYpe, IntRate, GLAddress, PhoneNo, LandLineNo, OwnerName, OwnerNumber, Scheme, Email, Branch_ID, Company_Id, EnterBy, EnterDate, Status, IsDefault, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY gl.GlDesc) GLID, gl.GlDesc NepaliDesc, gl.GlDesc GLName, gl.GlCode GLCode, gl.AccountingCode ACCode, CASE WHEN gl.Catagory='Customer/Vendor' THEN 'Both'
                                                                                                                                        WHEN gl.Catagory='Cash Book' THEN 'Cash'
                                                                                                                                        WHEN gl.Catagory='Bank Book' THEN 'Bank' ELSE gl.Catagory END GLType, ag.GrpId, ag.PrimaryGroupId, NULL SubGrpId, NULL PrimarySubGroupId, gl.PanNo, NULL AreaId, NULL AgentId, 1 CurrId, 0 CrDays, 0 CrLimit, 'I' CrTYpe, 0 IntRate, gl.AddressI GLAddress, gl.Mobile PhoneNo, NULL LandLineNo, NULL OwnerName, NULL OwnerNumber, NULL Scheme, NULL Email, 1 Branch_ID, NULL Company_Id, 'MrSolution' EnterBy, GETDATE() EnterDate, 1 Status, 0 IsDefault, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.GeneralLedger gl
     LEFT OUTER JOIN AMS.AccountGroup ag ON ag.GrpCode=gl.GrpCode;
INSERT INTO AMS.ProductUnit(UID, NepaliDesc, UnitName, UnitCode, Branch_ID, Company_Id, EnterBy, EnterDate, Status, IsDefault, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY pu.UnitCode) UID, pu.UnitCode NepaliDesc, pu.UnitCode UnitName, pu.UnitCode UnitCode, 1 Branch_ID, NULL Company_Id, 'MrSolution' EnterBy, GETDATE() EnterDate, 1 Status, 0 IsDefault, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.Product pu
WHERE pu.UnitCode NOT IN(SELECT UnitCode FROM AMS.ProductUnit)AND ISNULL(pu.UnitCode, '')<>''
GROUP BY pu.UnitCode;
INSERT INTO AMS.ProductUnit(UID, NepaliDesc, UnitName, UnitCode, Branch_ID, Company_Id, EnterBy, EnterDate, Status, IsDefault, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT 6+ROW_NUMBER() OVER (ORDER BY pu.AltUnitCode) UID, pu.AltUnitCode NepaliDesc, pu.AltUnitCode UnitName, pu.AltUnitCode UnitCode, 1 Branch_ID, NULL Company_Id, 'MrSolution' EnterBy, GETDATE() EnterDate, 1 Status, 0 IsDefault, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.Product pu
WHERE pu.AltUnitCode NOT IN(SELECT UnitCode FROM AMS.ProductUnit)AND ISNULL(pu.AltUnitCode, '')<>''
GROUP BY pu.AltUnitCode;
INSERT INTO AMS.Product(PID, NepaliDesc, PName, PAlias, PShortName, PType, PCategory, PUnit, PAltUnit, PQtyConv, PAltConv, PValTech, PSerialno, PSizewise, PBatchwise, PVehicleWise, PublicationWise, PBuyRate, AltSalesRate, PSalesRate, PMargin1, TradeRate, PMargin2, PMRP, PGrpId, PSubGrpId, PTax, PMin, PMax, CmpId, CmpId1, CmpId2, CmpId3, Branch_Id, CmpUnit_Id, PPL, PPR, PSL, PSR, PL_Opening, PL_Closing, BS_Closing, PImage, EnterBy, EnterDate, IsDefault, Status, ChasisNo, EngineNo, VHModel, VHColor, VHNumber, BeforeBuyRate, BeforeSalesRate, Barcode, Barcode1, Barcode2, Barcode3, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT p.Id PID, p.PDesc NepaliDesc, p.PDesc PName, p.PDesc PAlias, p.PCode PShortName, p.Catagory PType, p.ValuationMethod PCategory, ISNULL(pu.UID, 3) PUnit, au.UID PAltUnit, p.AltQty PQtyConv, p.Qty PAltConv, 'FIFO' PValTech, 0 PSerialno, 0 PSizewise, 0 PBatchwise, 0 PVehicleWise, 0 PublicationWise, p.BuyRate PBuyRate, ISNULL(p.AltSalesRate, 0) AltSalesRate, p.SalesRate PSalesRate, p.Margin PMargin1, p.TradeRate TradeRate, 0 PMargin2, 0 PMRP, NULL PGrpId, NULL PSubGrpId, p.Vat PTax, 0 PMin, 0 PMax, NULL CmpId, NULL CmpId1, NULL CmpId2, NULL CmpId3, 1 Branch_Id, NULL CmpUnit_Id, NULL PPL, NULL PPR, NULL PSL, NULL PSR, NULL PL_Opening, NULL PL_Closing, NULL BS_Closing, NULL PImage, 'MrSolution' EnterBy, GETDATE() EnterDate, 0 IsDefault, 1 Status, NULL ChasisNo, NULL EngineNo, NULL VHModel, NULL VHColor, NULL VHNumber, 0 BeforeBuyRate, 0 BeforeSalesRate, NULL Barcode, NULL Barcode1, NULL Barcode2, NULL Barcode3, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.Product p
     LEFT OUTER JOIN AMS.ProductUnit pu ON pu.UnitCode=p.UnitCode
     LEFT OUTER JOIN AMS.ProductUnit au ON au.UnitCode=p.AltUnitCode
WHERE Id NOT IN(SELECT PID FROM AMS.Product);
INSERT INTO AMS.SB_Master(SB_Invoice, Invoice_Date, Invoice_Miti, Invoice_Time, PB_Vno, Vno_Date, Vno_Miti, Customer_Id, PartyLedgerId, Party_Name, Vat_No, Contact_Person, Mobile_No, Address, ChqNo, ChqDate, ChqMiti, Invoice_Type, Invoice_Mode, Payment_Mode, DueDays, DueDate, Agent_Id, Subledger_Id, SO_Invoice, SO_Date, SC_Invoice, SC_Date, Cls1, Cls2, Cls3, Cls4, CounterId, Cur_Id, Cur_Rate, B_Amount, T_Amount, N_Amount, LN_Amount, V_Amount, Tbl_Amount, Tender_Amount, Return_Amount, Action_Type, In_Words, Remarks, R_Invoice, Cancel_By, Cancel_Date, Cancel_Remarks, Is_Printed, No_Print, Printed_By, Printed_Date, Audit_Lock, Enter_By, Enter_Date, Reconcile_By, Reconcile_Date, Auth_By, Auth_Date, Cleared_By, Cleared_Date, DoctorId, PatientId, HDepartmentId, MShipId, TableId, CBranch_Id, CUnit_Id, FiscalYearId, IsAPIPosted, IsRealtime, PAttachment1, PAttachment2, PAttachment3, PAttachment4, PAttachment5, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion, IsSynced)
SELECT sm.VNo SB_Invoice, sm.VDate Invoice_Date, sm.VMiti Invoice_Miti, sm.VTime Invoice_Time, sm.RefNo PB_Vno, sm.RefDate Vno_Date, sm.RefMiti Vno_Miti, gl.GLID Customer_Id, NULL PartyLedgerId, sm.PartyName Party_Name, sm.VatNo Vat_No, NULL Contact_Person, NULL Mobile_No, NULL Address, NULL ChqNo, NULL ChqDate, NULL ChqMiti, 'LOCAL' Invoice_Type, 'NORMAL' Invoice_Mode, CASE WHEN gl.GLType IN ('Cash', 'Bank') THEN 'CASH' ELSE 'CREDIT' END Payment_Mode, 0 DueDays, NULL DueDate, NULL Agent_Id, NULL Subledger_Id, NULL SO_Invoice, NULL SO_Date, NULL SC_Invoice, NULL SC_Date, NULL Cls1, NULL Cls2, NULL Cls3, NULL Cls4, NULL CounterId, 1 Cur_Id, 1 Cur_Rate, sm.BasicAmt B_Amount, sm.TermAmt T_Amount, sm.NetAmt N_Amount, sm.NetAmt LN_Amount, 0 V_Amount, 0 Tbl_Amount, 0 Tender_Amount, 0 Return_Amount, sm.EntryType Action_Type, sm.NetAmt In_Words, sm.Remarks, 0 R_Invoice, NULL Cancel_By, NULL Cancel_Date, NULL Cancel_Remarks, 0 Is_Printed, 0 No_Print, NULL Printed_By, NULL Printed_Date, 0 Audit_Lock, 'MrSolution' Enter_By, GETDATE() Enter_Date, NULL Reconcile_By, NULL Reconcile_Date, NULL Auth_By, NULL Auth_Date, NULL Cleared_By, NULL Cleared_Date, NULL DoctorId, NULL PatientId, NULL HDepartmentId, NULL MShipId, NULL TableId, 1 CBranch_Id, NULL CUnit_Id, 13 FiscalYearId, NULL IsAPIPosted, NULL IsRealtime, NULL PAttachment1, NULL PAttachment2, NULL PAttachment3, NULL PAttachment4, NULL PAttachment5, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion, 0 IsSynced
FROM PART798001.dbo.SalesInvoiceMaster sm
     LEFT OUTER JOIN AMS.GeneralLedger gl ON gl.GLCode=sm.GLCode
WHERE sm.VNo NOT IN(SELECT SB_Invoice FROM AMS.SB_Master);
INSERT INTO AMS.SB_Details(SB_Invoice, Invoice_SNo, P_Id, Gdn_Id, Alt_Qty, Alt_UnitId, Qty, Unit_Id, Rate, B_Amount, T_Amount, N_Amount, AltStock_Qty, Stock_Qty, Narration, SO_Invoice, SO_Sno, SC_Invoice, SC_SNo, Tax_Amount, V_Amount, V_Rate, Free_Unit_Id, Free_Qty, StockFree_Qty, ExtraFree_Unit_Id, ExtraFree_Qty, ExtraStockFree_Qty, T_Product, S_Ledger, SR_Ledger, SZ1, SZ2, SZ3, SZ4, SZ5, SZ6, SZ7, SZ8, SZ9, SZ10, Serial_No, Batch_No, Exp_Date, Manu_Date, MaterialPost, PDiscountRate, PDiscount, BDiscountRate, BDiscount, ServiceChargeRate, ServiceCharge, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT sd.VNo SB_Invoice, sd.SNo Invoice_SNo, p.PID P_Id, NULL Gdn_Id, sd.AltQty Alt_Qty, au.UID Alt_UnitId, sd.Qty, pu.UID Unit_Id, sd.CurrRate Rate, sd.CurrAmt B_Amount, sd.TermAmt T_Amount, sd.LocalAmt N_Amount, sd.AltQty AltStock_Qty, sd.Qty Stock_Qty, sd.Narration, NULL SO_Invoice, NULL SO_Sno, NULL SC_Invoice, NULL SC_SNo, 0 Tax_Amount, 0 V_Amount, 0 V_Rate, NULL Free_Unit_Id, 0 Free_Qty, 0 StockFree_Qty, NULL ExtraFree_Unit_Id, 0 ExtraFree_Qty, 0 ExtraStockFree_Qty, 0 T_Product, NULL S_Ledger, NULL SR_Ledger, NULL SZ1, NULL SZ2, NULL SZ3, NULL SZ4, NULL SZ5, NULL SZ6, NULL SZ7, NULL SZ8, NULL SZ9, NULL SZ10, NULL Serial_No, NULL Batch_No, NULL Exp_Date, NULL Manu_Date, 'N' MaterialPost, 0 PDiscountRate, 0 PDiscount, 0 BDiscountRate, 0 BDiscount, 0 ServiceChargeRate, 0 ServiceCharge, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.SalesInvoiceDetails sd
     LEFT OUTER JOIN AMS.Product p ON p.PShortName=sd.PCode
     LEFT OUTER JOIN AMS.ProductUnit pu ON pu.UnitName=sd.MUnit
     LEFT OUTER JOIN AMS.ProductUnit au ON au.UnitCode=sd.AUnit
WHERE sd.VNo NOT IN(SELECT SB_Invoice FROM AMS.SB_Details);
INSERT INTO AMS.PB_Master(PB_Invoice, Invoice_Date, Invoice_Miti, Invoice_Time, PB_Vno, Vno_Date, Vno_Miti, Vendor_ID, PartyLedgerId, Party_Name, Vat_No, Contact_Person, Mobile_No, Address, ChqNo, ChqDate, ChqMiti, Invoice_Type, Invoice_In, DueDays, DueDate, Agent_Id, Subledger_Id, PO_Invoice, PO_Date, PC_Invoice, PC_Date, Cls1, Cls2, Cls3, Cls4, Cur_Id, Cur_Rate, Counter_ID, B_Amount, T_Amount, N_Amount, LN_Amount, Tender_Amount, Change_Amount, V_Amount, Tbl_Amount, Action_type, R_Invoice, CancelBy, CancelDate, CancelRemarks, No_Print, In_Words, Remarks, Audit_Lock, Enter_By, Enter_Date, Reconcile_By, Reconcile_Date, Auth_By, Auth_Date, Cleared_By, Cleared_Date, CBranch_Id, CUnit_Id, FiscalYearId, PAttachment1, PAttachment2, PAttachment3, PAttachment4, PAttachment5, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion, IsSynced)
SELECT pm.VNo PB_Invoice, pm.VDate Invoice_Date, pm.VMiti Invoice_Miti, pm.VTime Invoice_Time, CASE WHEN pm.RefNo<>'' THEN pm.RefNo ELSE NULL END PB_Vno, pm.RefDate Vno_Date, pm.RefMiti Vno_Miti, gl.GLID Vendor_ID, NULL PartyLedgerId, NULL Party_Name, NULL Vat_No, NULL Contact_Person, NULL Mobile_No, NULL Address, NULL ChqNo, NULL ChqDate, NULL ChqMiti, 'NORMAL' Invoice_Type, CASE WHEN gl.GLType IN ('Cash', 'Bank') THEN 'CASH' ELSE 'CREDIT' END Invoice_In, 0 DueDays, NULL DueDate, NULL Agent_Id, NULL Subledger_Id, NULL PO_Invoice, NULL PO_Date, NULL PC_Invoice, NULL PC_Date, NULL Cls1, NULL Cls2, NULL Cls3, NULL Cls4, 1 Cur_Id, 1 Cur_Rate, NULL Counter_ID, pm.BasicAmt B_Amount, pm.TermAmt T_Amount, pm.NetAmt N_Amount, pm.NetAmt LN_Amount, 0 Tender_Amount, 0 Change_Amount, 0 V_Amount, 0 Tbl_Amount, 'SAVE' Action_type, 0 R_Invoice, NULL CancelBy, NULL CancelDate, NULL CancelRemarks, 0 No_Print, pm.NetAmt In_Words, pm.Remarks Remarks, 0 Audit_Lock, 'MrSolution' Enter_By, GETDATE() Enter_Date, NULL Reconcile_By, NULL Reconcile_Date, NULL Auth_By, NULL Auth_Date, NULL Cleared_By, NULL Cleared_Date, 1 CBranch_Id, NULL CUnit_Id, 13 FiscalYearId, NULL PAttachment1, NULL PAttachment2, NULL PAttachment3, NULL PAttachment4, NULL PAttachment5, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion, NULL IsSynced
FROM PART798001.dbo.PurchaseInvoiceMaster pm
     LEFT OUTER JOIN AMS.GeneralLedger gl ON gl.GLCode=pm.GLCode
WHERE pm.VNo NOT IN(SELECT PB_Invoice FROM AMS.PB_Master);
INSERT INTO AMS.PB_Details(PB_Invoice, Invoice_SNo, P_Id, Gdn_Id, Alt_Qty, Alt_UnitId, Qty, Unit_Id, Rate, B_Amount, T_Amount, N_Amount, AltStock_Qty, Stock_Qty, Narration, PO_Invoice, PO_Sno, PC_Invoice, PC_SNo, Tax_Amount, V_Amount, V_Rate, Free_Unit_Id, Free_Qty, StockFree_Qty, ExtraFree_Unit_Id, ExtraFree_Qty, ExtraStockFree_Qty, T_Product, P_Ledger, PR_Ledger, SZ1, SZ2, SZ3, SZ4, SZ5, SZ6, SZ7, SZ8, SZ9, SZ10, Serial_No, Batch_No, Exp_Date, Manu_Date, TaxExempted_Amount, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT pd.VNo PB_Invoice, pd.SNo Invoice_SNo, p.PID P_Id, NULL Gdn_Id, pd.AltQty Alt_Qty, NULL Alt_UnitId, pd.Qty Qty, p.PUnit Unit_Id, pd.LocalRate Rate, pd.CurrAmt B_Amount, pd.TermAmt T_Amount, pd.LocalAmt N_Amount, pd.AltQty AltStock_Qty, pd.Qty Stock_Qty, pd.Narration Narration, NULL PO_Invoice, 0 PO_Sno, NULL PC_Invoice, 0 PC_SNo, 0 Tax_Amount, 0 V_Amount, 0 V_Rate, NULL Free_Unit_Id, 0 Free_Qty, 0 StockFree_Qty, NULL ExtraFree_Unit_Id, 0 ExtraFree_Qty, 0 ExtraStockFree_Qty, 0 T_Product, NULL P_Ledger, NULL PR_Ledger, NULL SZ1, NULL SZ2, NULL SZ3, NULL SZ4, NULL SZ5, NULL SZ6, NULL SZ7, NULL SZ8, NULL SZ9, NULL SZ10, NULL Serial_No, NULL Batch_No, NULL Exp_Date, NULL Manu_Date, 0 TaxExempted_Amount, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.PurchaseInvoiceDetails pd
     LEFT OUTER JOIN AMS.Product p ON p.PShortName=pd.PCode
WHERE pd.VNo NOT IN(SELECT PB_Invoice FROM AMS.PB_Details);
INSERT INTO AMS.CB_Master(VoucherMode, Voucher_No, Voucher_Date, Voucher_Miti, Voucher_Time, Ref_VNo, Ref_VDate, VoucherType, Ledger_Id, CheqNo, CheqDate, CheqMiti, Currency_Id, Currency_Rate, Cls1, Cls2, Cls3, Cls4, Remarks, Action_Type, EnterBy, EnterDate, ReconcileBy, ReconcileDate, Audit_Lock, ClearingBy, ClearingDate, PrintValue, CBranch_Id, CUnit_Id, FiscalYearId, PAttachment1, PAttachment2, PAttachment3, PAttachment4, PAttachment5, IsReverse, CancelBy, CancelDate, CancelReason, In_Words, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion, CancelRemarks, IsSynced)
SELECT 'Contra' VoucherMode, cb.VNo Voucher_No, cb.VDate Voucher_Date, cb.VMiti Voucher_Miti, cb.VTime Voucher_Time, NULL Ref_VNo, NULL Ref_VDate, 'Contra' VoucherType, gl.GLID Ledger_Id, cb.ChqNo CheqNo, cb.ChqDate CheqDate, cb.ChqMiti CheqMiti, 1 Currency_Id, 1 Currency_Rate, NULL Cls1, NULL Cls2, NULL Cls3, NULL Cls4, cb.Remarks Remarks, 'SAVE' Action_Type, 'MrSolution' EnterBy, GETDATE() EnterDate, NULL ReconcileBy, NULL ReconcileDate, 0 Audit_Lock, NULL ClearingBy, NULL ClearingDate, 0 PrintValue, 1 CBranch_Id, NULL CUnit_Id, 13 FiscalYearId, NULL PAttachment1, NULL PAttachment2, NULL PAttachment3, NULL PAttachment4, NULL PAttachment5, 0 IsReverse, NULL CancelBy, NULL CancelDate, NULL CancelReason, 0 In_Words, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion, NULL CancelRemarks, NULL IsSynced
FROM PART798001.dbo.CashBankMaster cb
     LEFT OUTER JOIN AMS.GeneralLedger gl ON gl.GLCode=cb.GLCode
WHERE cb.VNo NOT IN(SELECT Voucher_No FROM AMS.CB_Master);
INSERT INTO AMS.CB_Details(Voucher_No, SNo, CBLedgerId, Ledger_Id, Subledger_Id, Agent_Id, Cls1, Cls2, Cls3, Cls4, CurrencyId, CurrencyRate, Debit, Credit, LocalDebit, LocalCredit, Tbl_Amount, V_Amount, Narration, Party_No, Invoice_Date, Invoice_Miti, VatLedger_Id, PanNo, Vat_Reg, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT cb.VNo Voucher_No, cb.SNo SNo, cm.Ledger_Id CBLedgerId, gl.GLID Ledger_Id, NULL Subledger_Id, NULL Agent_Id, NULL Cls1, NULL Cls2, NULL Cls3, NULL Cls4, 1 CurrencyId, 1 CurrencyRate, cb.PayCurrAmt Debit, cb.RecCurrAmt Credit, cb.PayCurrAmt LocalDebit, cb.RecCurrAmt LocalCredit, 0 Tbl_Amount, 0 V_Amount, cb.Narration Narration, NULL Party_No, NULL Invoice_Date, NULL Invoice_Miti, NULL VatLedger_Id, NULL PanNo, NULL Vat_Reg, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.CashBankDetails cb
     LEFT OUTER JOIN AMS.GeneralLedger gl ON gl.GLCode=cb.GLCode
     LEFT OUTER JOIN AMS.CB_Master cm ON cb.VNo=cm.Voucher_No
WHERE cb.VNo NOT IN(SELECT Voucher_No FROM AMS.CB_Details);

INSERT INTO AMS.JV_Master(VoucherMode, Voucher_No, Voucher_Date, Voucher_Miti, Voucher_Time, Ref_VNo, Ref_VDate, Currency_Id, Currency_Rate, Cls1, Cls2, Cls3, Cls4, N_Amount, Remarks, Action_Type, EnterBy, EnterDate, Audit_Lock, IsReverse, CancelBy, CancelDate, CancelReason, ReconcileBy, ReconcileDate, ClearingBy, ClearingDate, PrintValue, CBranch_Id, CUnit_Id, FiscalYearId, PAttachment1, PAttachment2, PAttachment3, PAttachment4, PAttachment5, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion, CancelRemarks, IsSynced)
SELECT 'N' VoucherMode, jm.VNo Voucher_No, jm.VDate Voucher_Date, jm.VMiti Voucher_Miti, jm.VTime Voucher_Time, NULL Ref_VNo, NULL Ref_VDate, 1 Currency_Id, 1 Currency_Rate, NULL Cls1, NULL Cls2, NULL Cls3, NULL Cls4, 0 N_Amount, jm.Remarks Remarks, 'SAVE' Action_Type, 'MrSolution' EnterBy, GETDATE() EnterDate, 0 Audit_Lock, 0 IsReverse, NULL CancelBy, NULL CancelDate, NULL CancelReason, NULL ReconcileBy, NULL ReconcileDate, NULL ClearingBy, NULL ClearingDate, 0 PrintValue, 1 CBranch_Id, NULL CUnit_Id, 13 FiscalYearId, NULL PAttachment1, NULL PAttachment2, NULL PAttachment3, NULL PAttachment4, NULL PAttachment5, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion, NULL CancelRemarks, NULL IsSynced
FROM PART798001.dbo.JournalMaster jm
WHERE jm.VNo NOT IN(SELECT Voucher_No FROM AMS.JV_Master);

INSERT INTO AMS.JV_Details(Voucher_No, SNo, CBLedger_Id, Ledger_Id, Subledger_Id, Agent_Id, Cls1, Cls2, Cls3, Cls4, Chq_No, Chq_Date, CurrencyId, CurrencyRate, Debit, Credit, LocalDebit, LocalCredit, Narration, Tbl_Amount, V_Amount, Vat_Reg, Party_No, Invoice_Date, Invoice_Miti, VatLedger_Id, PanNo, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT jd.VNo Voucher_No,jd.SNo SNo,NULL CBLedger_Id,gl.GLID Ledger_Id,NULL Subledger_Id,NULL Agent_Id,NULL Cls1,NULL Cls2,NULL Cls3,NULL Cls4,NULL Chq_No,NULL Chq_Date,1 CurrencyId,1 CurrencyRate,jd.DrCurrAmt Debit,jd.CrCurrAmt Credit,jd.DrCurrAmt LocalDebit,jd.CrCurrAmt LocalCredit,jd.Narration Narration,0 Tbl_Amount,0 V_Amount,0 Vat_Reg,NULL Party_No,NULL Invoice_Date,NULL Invoice_Miti,NULL VatLedger_Id,NULL PanNo,NULL SyncBaseId,NULL SyncGlobalId,NULL SyncOriginId,NULL SyncCreatedOn,NULL SyncLastPatchedOn,1 SyncRowVersion
FROM PART798001.dbo.JournalDetails jd
LEFT OUTER JOIN AMS.GeneralLedger gl ON gl.GLCode = jd.GLCode
WHERE jd.VNo NOT IN(SELECT Voucher_No FROM AMS.JV_Details);


INSERT INTO AMS.LedgerOpening(Opening_Id, Module, Serial_No, Voucher_No, OP_Date, OP_Miti, Ledger_Id, Subledger_Id, Agent_Id, Cls1, Cls2, Cls3, Cls4, Currency_Id, Currency_Rate, Debit, LocalDebit, Credit, LocalCredit, Narration, Remarks, Enter_By, Enter_Date, Reconcile_By, Reconcile_Date, Branch_Id, Company_Id, FiscalYearId, IsReverse, CancelRemarks, CancelBy, CancelDate, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT od.VNo Opening_Id,'LOB' Module,ROW_NUMBER() OVER (ORDER BY od.VNo,od.GLCode) Serial_No,od.VNo Voucher_No,om.VDate OP_Date,om.VMiti OP_Miti,gl.GLID Ledger_Id,NULL Subledger_Id,NULL Agent_Id,NULL Cls1,NULL Cls2,NULL Cls3,NULL Cls4,1 Currency_Id,1 Currency_Rate,od.DrCurrAmt Debit,od.DrCurrAmt LocalDebit,od.CrCurrAmt Credit,od.CrCurrAmt LocalCredit,od.Narration Narration,om.Remarks Remarks,'MrSolution' Enter_By,GETDATE() Enter_Date,NULL Reconcile_By,NULL Reconcile_Date,1 Branch_Id, NULL Company_Id,13 FiscalYearId,0 IsReverse,NULL CancelRemarks,NULL CancelBy,NULL CancelDate,NULL SyncBaseId,NULL SyncGlobalId,NULL SyncOriginId,NULL SyncCreatedOn,NULL SyncLastPatchedOn,1 SyncRowVersion 
FROM PART798001.dbo.OpeningMaster om
LEFT OUTER JOIN PART798001.dbo.OpeningDetails od ON od.VNo = om.VNo
LEFT OUTER JOIN AMS.GeneralLedger gl ON gl.GLCode = od.GLCode
WHERE od.VNo NOT IN (SELECT Voucher_No FROM AMS.LedgerOpening)


INSERT INTO AMS.SR_Master(SR_Invoice, Invoice_Date, Invoice_Miti, Invoice_Time, SB_Invoice, SB_Date, SB_Miti, Customer_ID, PartyLedgerId, Party_Name, Vat_No, Contact_Person, Mobile_No, Address, ChqNo, ChqDate, ChqMiti, Invoice_Type, Invoice_Mode, Payment_Mode, DueDays, DueDate, Agent_Id, Subledger_Id, Cls1, Cls2, Cls3, Cls4, CounterId, Cur_Id, Cur_Rate, B_Amount, T_Amount, N_Amount, LN_Amount, V_Amount, Tbl_Amount, Tender_Amount, Return_Amount, Action_Type, In_Words, Remarks, R_Invoice, Is_Printed, Cancel_By, Cancel_Date, Cancel_Remarks, No_Print, Printed_By, Printed_Date, Audit_Lock, Enter_By, Enter_Date, Reconcile_By, Reconcile_Date, Auth_By, Auth_Date, Cleared_By, Cleared_Date, IsAPIPosted, IsRealtime, CBranch_Id, CUnit_Id, FiscalYearId, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion, IsSynced)
SELECT sm.VNo SR_Invoice,sm.VDate Invoice_Date,sm.VMiti Invoice_Miti,sm.VTime Invoice_Time,sm.RefNo SB_Invoice,sm.RefDate SB_Date,sm.RefMiti SB_Miti,gl.GLID Customer_ID,NULL PartyLedgerId,NULL Party_Name,NULL Vat_No,NULL Contact_Person,NULL Mobile_No,NULL Address,
NULL ChqNo,NULL ChqDate,NULL ChqMiti,'LOCAL' Invoice_Type,'NORMAL' Invoice_Mode,CASE WHEN gl.GLType IN ('Cash', 'Bank') THEN 'CASH' ELSE 'CREDIT' END Payment_Mode,0 DueDays,NULL DueDate,NULL Agent_Id,NULL Subledger_Id,NULL Cls1,NULL Cls2,NULL Cls3,NULL Cls4,
NULL CounterId,1 Cur_Id,1 Cur_Rate,sm.BasicAmt B_Amount,sm.TermAmt T_Amount,sm.NetAmt N_Amount,sm.NetAmt LN_Amount,0 V_Amount,0 Tbl_Amount, 0 Tender_Amount,0 Return_Amount,'SAVE' Action_Type,sm.NetAmt In_Words,sm.Remarks Remarks,0 R_Invoice,0 Is_Printed,NULL Cancel_By,NULL Cancel_Date,
NULL Cancel_Remarks,0 No_Print,NULL Printed_By,NULL Printed_Date,0 Audit_Lock,'MrSolution' Enter_By,GETDATE() Enter_Date,NULL Reconcile_By,NULL Reconcile_Date,NULL Auth_By, NULL Auth_Date,NULL Cleared_By,NULL Cleared_Date,NULL IsAPIPosted,NULL IsRealtime,1 CBranch_Id,NULL CUnit_Id,13 FiscalYearId,NULL SyncBaseId,NULL SyncGlobalId,NULL SyncOriginId,NULL SyncCreatedOn,NULL SyncLastPatchedOn, 1 SyncRowVersion,NULL IsSynced
FROM PART798001.dbo.SalesreturnMaster sm
     LEFT OUTER JOIN AMS.GeneralLedger gl ON gl.GLCode=sm.GLCode
WHERE sm.VNo NOT IN(SELECT SR_Invoice FROM AMS.SR_Master);


INSERT INTO AMS.SR_Details(SR_Invoice, Invoice_SNo, P_Id, Gdn_Id, Alt_Qty, Alt_UnitId, Qty, Unit_Id, Rate, B_Amount, T_Amount, N_Amount, AltStock_Qty, Stock_Qty, Narration, SB_Invoice, SB_Sno, Tax_Amount, V_Amount, V_Rate, Free_Unit_Id, Free_Qty, StockFree_Qty, ExtraFree_Unit_Id, ExtraFree_Qty, ExtraStockFree_Qty, T_Product, S_Ledger, SR_Ledger, SZ1, SZ2, SZ3, SZ4, SZ5, SZ6, SZ7, SZ8, SZ9, SZ10, Serial_No, Batch_No, Exp_Date, Manu_Date, PDiscountRate, PDiscount, BDiscountRate, BDiscount, ServiceChargeRate, ServiceCharge, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT sd.VNo SR_Invoice, sd.SNo Invoice_SNo, p.PID P_Id, NULL Gdn_Id, sd.AltQty Alt_Qty, p.PAltUnit Alt_UnitId, sd.Qty Qty, p.PUnit Unit_Id, sd.CurrRate Rate, sd.CurrAmt B_Amount, sd.TermAmt T_Amount, sd.LocalAmt N_Amount, sd.AltQty AltStock_Qty, sd.Qty Stock_Qty, sd.Narration Narration, NULL SB_Invoice, NULL SB_Sno, 0 Tax_Amount, 0 V_Amount, 0 V_Rate, NULL Free_Unit_Id, 0 Free_Qty, 0 StockFree_Qty, NULL ExtraFree_Unit_Id, 0 ExtraFree_Qty, 0 ExtraStockFree_Qty, 0 T_Product, NULL S_Ledger, NULL SR_Ledger, NULL SZ1, NULL SZ2, NULL SZ3, NULL SZ4, NULL SZ5, NULL SZ6, NULL SZ7, NULL SZ8, NULL SZ9, NULL SZ10, NULL Serial_No, NULL Batch_No, NULL Exp_Date, NULL Manu_Date, 0 PDiscountRate, 0 PDiscount, 0 BDiscountRate, 0 BDiscount, 0 ServiceChargeRate, 0 ServiceCharge, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM PART798001.dbo.SalesreturnDetails sd
     LEFT OUTER JOIN AMS.Product p ON p.PShortName=sd.PCode
WHERE sd.VNo NOT IN(SELECT SR_Invoice FROM AMS.SR_Details);

INSERT INTO AMS.ProductOpening(OpeningId, Voucher_No, Serial_No, OP_Date, OP_Miti, Product_Id, Godown_Id, Cls1, Cls2, Cls3, Cls4, Currency_Id, Currency_Rate, AltQty, AltUnit, Qty, QtyUnit, Rate, LocalRate, Amount, LocalAmount, IsReverse, CancelRemarks, CancelBy, CancelDate, Remarks, Enter_By, Enter_Date, Reconcile_By, Reconcile_Date, CBranch_Id, CUnit_Id, FiscalYearId, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT po.Vno OpeningId,po.Vno Voucher_No,po.Sno Serial_No,po.OpeningDate OP_Date,po.OpeningMiti OP_Miti,p.PID Product_Id,NULL Godown_Id,NULL Cls1,NULL Cls2,NULL Cls3,NULL Cls4,1 Currency_Id,1 Currency_Rate,po.AltQty AltQty,CASE WHEN po.AltQty > 0 then p.PAltUnit ELSE NULL end AltUnit,po.Qty Qty,p.PUnit QtyUnit,po.Rate Rate,po.Rate LocalRate,po.Amount Amount,po.Amount LocalAmount,0 IsReverse,NULL CancelRemarks,NULL CancelBy,NULL CancelDate,NULL Remarks,'MrSolution' Enter_By,GETDATE() Enter_Date,NULL Reconcile_By,NULL Reconcile_Date,1 CBranch_Id,NULL CUnit_Id,13 FiscalYearId,NULL SyncBaseId,NULL SyncGlobalId,NULL SyncOriginId,NULL SyncCreatedOn,NULL SyncLastPatchedOn,1 SyncRowVersion 
FROM PART798001.dbo.ProductOpening po
LEFT OUTER JOIN AMS.Product p ON p.PShortName = po.pCode 
WHERE po.Vno NOT IN (SELECT Voucher_No FROM AMS.ProductOpening)

INSERT INTO AMS.STA_Master(StockAdjust_No, VDate, VMiti, Vtime, DepartmentId, BarCode, PhyStockNo, Posting, Export, ReconcileBy, AuditBy, AuditDate, AuthorizeBy, AuthorizeDate, AuthorizeRemarks, PostedBy, PostedDate, Remarks, Status, EnterBy, EnterDate, PrintValue, IsReverse, CancelBy, CancelDate, CancelReason, BranchId, CompanyUnitId, FiscalYearId, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion, IsSynced)
SELECT sm.VNo StockAdjust_No,sm.VDate VDate,sm.VMiti VMiti,sm.VDate Vtime,NULL DepartmentId,NULL BarCode,NULL PhyStockNo,NULL Posting,NULL Export,NULL ReconcileBy,NULL AuditBy,NULL AuditDate,NULL AuthorizeBy,NULL AuthorizeDate,NULL AuthorizeRemarks,NULL PostedBy,NULL PostedDate, Remarks,1 Status,'MrSolution' EnterBy,GETDATE() EnterDate,0 PrintValue,0 IsReverse,NULL CancelBy,NULL CancelDate,NULL CancelReason,1 BranchId,NULL CompanyUnitId,13 FiscalYearId,NULL SyncBaseId,NULL SyncGlobalId,NULL SyncOriginId,NULL SyncCreatedOn,NULL SyncLastPatchedOn,1 SyncRowVersion,NULL IsSynced 
FROM PART798001.dbo.StockAdjustmentMaster sm
WHERE sm.VNo NOT IN (SELECT StockAdjust_No FROM AMS.STA_Master)

INSERT INTO AMS.STA_Details(StockAdjust_No, Sno, ProductId, GodownId, DepartmentId, AdjType, AltQty, AltUnitId, Qty, UnitId, AltStockQty, StockQty, Rate, NetAmount, AddDesc, StConvRatio, PhyStkNo, PhyStkSno)
SELECT sd.VNo StockAdjust_No,sd.Sno Sno,p.PID ProductId,NULL GodownId,NULL DepartmentId,SUBSTRING(sd.InOut, 1, 1) AdjType,sd.AltQty AltQty,CASE WHEN sd.AltQty > 0 THEN p.PAltUnit ELSE NULL END AltUnitId,sd.Qty Qty,p.PUnit UnitId,sd.AltQty AltStockQty,sd.Qty StockQty,sd.Rate Rate,sd.Amount NetAmount,NULL AddDesc,0 StConvRatio,NULL PhyStkNo,NULL PhyStkSno 
FROM PART798001.dbo.StockAdjustmentDetails sd
LEFT OUTER JOIN AMS.Product p ON p.PShortName = sd.PCOde
WHERE sd.VNo NOT IN (SELECT sd.VNo FROM AMS.STA_Details)

-- SELECT DISTINCT Source FROM PART798001.dbo.ACTransaction

-- SELECT DISTINCT source FROM PART798001.dbo.Stock_Transaction
