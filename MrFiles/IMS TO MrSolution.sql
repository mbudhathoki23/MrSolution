INSERT INTO AMS.ProductUnit (UID, NepaliDesc, UnitName, UnitCode, Branch_ID, Company_Id, EnterBy, EnterDate, Status, IsDefault, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY UNITS) UID, UNITS NepaliDesc, UNITS UnitName, UNITS UnitCode, 1 Branch_ID, NULL Company_Id, 'MrSolution' EnterBy, GETDATE() EnterDate, 1 Status, 0 IsDefault, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, GETDATE() SyncLastPatchedOn, 1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.UNIT u
WHERE u.UNITS NOT IN (SELECT UnitName FROM AMS.ProductUnit);
INSERT INTO AMS.ProductGroup (PGrpId, NepaliDesc, GrpName, GrpCode, GMargin, Gprinter, PurchaseLedgerId, PurchaseReturnLedgerId, SalesLedgerId, SalesReturnLedgerId, OpeningStockLedgerId, ClosingStockLedgerId, StockInHandLedgerId, Branch_ID, Company_Id, Status, EnterBy, EnterDate, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY m.MCAT) PGrpId, m.MCAT NepaliDesc, m.MCAT GrpName, ROW_NUMBER() OVER (ORDER BY m.MCAT) GrpCode, 0 GMargin, NULL Gprinter, NULL PurchaseLedgerId, NULL PurchaseReturnLedgerId, NULL SalesLedgerId, NULL SalesReturnLedgerId, NULL OpeningStockLedgerId, NULL ClosingStockLedgerId, NULL StockInHandLedgerId, 1 Branch_ID, NULL Company_Id, 1 Status, 'MrSolution' EnterBy, GETDATE() EnterDate, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, GETDATE() SyncLastPatchedOn, 1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.MENUITEM m
WHERE ISNULL(m.MCAT, '') NOT IN ('', 'N/A') AND m.MCAT NOT IN (SELECT GrpName FROM AMS.ProductGroup)
GROUP BY m.MCAT;
INSERT INTO AMS.ProductSubGroup (PSubGrpId, NepaliDesc, SubGrpName, ShortName, GrpId, Branch_ID, Company_Id, EnterBy, EnterDate, IsDefault, Status, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY m.MCAT1) PSubGrpId, m.MCAT1 NepaliDesc, m.MCAT1 SubGrpName, ROW_NUMBER() OVER (ORDER BY m.MCAT1) ShortName, pg.PGrpId GrpId, 1 Branch_ID, NULL Company_Id, 'MrSolution' EnterBy, GETDATE() EnterDate, 0 IsDefault, 1 Status, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, GETDATE() SyncLastPatchedOn, 1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.MENUITEM m
     LEFT OUTER JOIN AMS.ProductGroup                   pg ON pg.GrpName=m.MCAT
WHERE ISNULL(m.MCAT1, '') NOT IN ('', 'N/A') AND m.MCAT1 NOT IN (SELECT SubGrpName FROM AMS.ProductSubGroup)
GROUP BY m.MCAT1, pg.PGrpId;
INSERT INTO AMS.Product (PID, NepaliDesc, PName, PAlias, PShortName, PType, PCategory, PUnit, PAltUnit, PQtyConv, PAltConv, PValTech, PSerialno, PSizewise, PBatchwise, PVehicleWise, PublicationWise, PBuyRate, AltSalesRate, PSalesRate, PMargin1, TradeRate, PMargin2, PMRP, PGrpId, PSubGrpId, PTax, PMin, PMax, CmpId, CmpId1, CmpId2, CmpId3, Branch_Id, CmpUnit_Id, PPL, PPR, PSL, PSR, PL_Opening, PL_Closing, BS_Closing, PImage, EnterBy, EnterDate, IsDefault, Status, ChasisNo, EngineNo, VHModel, VHColor, VHNumber, BeforeBuyRate, BeforeSalesRate, Barcode, Barcode1, Barcode2, Barcode3, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY m.DESCA) PID, m.DESCA NepaliDesc, m.DESCA PName, m.DESCA PAlias, m.MCODE PShortName, 'I' PType, 'FG' PCategory, ISNULL(pu.UID, 4) PUnit, NULL PAltUnit, 0 PQtyConv, 0 PAltConv, 'FIFO' PValTech, 0 PSerialno, 0 PSizewise, 0 PBatchwise, 0 PVehicleWise, 0 PublicationWise, m.PRATE_A PBuyRate, 0 AltSalesRate, m.RATE_A PSalesRate, 0 PMargin1, m.RATE_A TradeRate, 0 PMargin2, m.RATE_A PMRP, pg.PGrpId PGrpId, psg.PSubGrpId PSubGrpId, CASE WHEN m.VAT=1 THEN 13 ELSE 0 END PTax, 0 PMin, 0 PMax, NULL CmpId, NULL CmpId1, NULL CmpId2, NULL CmpId3, 1 Branch_Id, NULL CmpUnit_Id, NULL PPL, NULL PPR, NULL PSL, NULL PSR, NULL PL_Opening, NULL PL_Closing, NULL BS_Closing, NULL PImage, 'MrSolution' EnterBy, GETDATE() EnterDate, 0 IsDefault, 1 Status, NULL ChasisNo, NULL EngineNo, NULL VHModel, NULL VHColor, NULL VHNumber, m.PRATE_A BeforeBuyRate, m.RATE_A BeforeSalesRate, m.MENUCODE Barcode, m.MCODE Barcode1, NULL Barcode2, NULL Barcode3, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.MENUITEM m
     LEFT OUTER JOIN AMS.ProductUnit                    pu ON pu.UnitCode=m.DESCA
     LEFT OUTER JOIN AMS.ProductGroup                   pg ON pg.GrpName=m.MCAT
     LEFT OUTER JOIN AMS.ProductSubGroup                psg ON psg.SubGrpName=m.MCAT1
WHERE ISNULL(m.DESCA, '')<>'' AND m.DESCA NOT IN (SELECT PName FROM AMS.Product)
GROUP BY m.VAT, m.DESCA, m.DESCA, m.DESCA, m.MCODE, pu.UID, m.PRATE_A, m.RATE_A, m.RATE_A, m.RATE_A, pg.PGrpId, psg.PSubGrpId, m.PRATE_A, m.RATE_A, m.MENUCODE, m.MCODE;
INSERT INTO AMS.MemberShipSetup (MShipId, MemberId, NepaliDesc, MShipDesc, MShipShortName, PhoneNo, PriceTag, LedgerId, EmailAdd, MemberTypeId, BranchId, CompanyUnitId, MValidDate, MExpireDate, EnterBy, EnterDate, ActiveStatus, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT ROW_NUMBER() OVER (ORDER BY mp.FNAME) MShipId, CONVERT(NVARCHAR, DATENAME(YEAR, GETDATE()))+CONVERT(NVARCHAR, ROW_NUMBER() OVER (ORDER BY mp.FNAME)) MemberId, mp.FNAME NepaliDesc, mp.FNAME MShipDesc, mp.MEMID MShipShortName, mp.MOBILE PhoneNo, 'MRP' PriceTag, 1 LedgerId, mp.EMAIL EmailAdd, 1 MemberTypeId, 1 BranchId, NULL CompanyUnitId, GETDATE() MValidDate, mp.EDATE MExpireDate, 'MrSolution' EnterBy, GETDATE() EnterDate, 1 ActiveStatus, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.MEMBERSHIP mp
WHERE mp.MOBILE NOT IN (SELECT PhoneNo FROM AMS.MemberShipSetup);
INSERT INTO AMS.SB_Master (SB_Invoice, Invoice_Date, Invoice_Miti, Invoice_Time, PB_Vno, Vno_Date, Vno_Miti, Customer_Id, PartyLedgerId, Party_Name, Vat_No, Contact_Person, Mobile_No, Address, ChqNo, ChqDate, ChqMiti, Invoice_Type, Invoice_Mode, Payment_Mode, DueDays, DueDate, Agent_Id, Subledger_Id, SO_Invoice, SO_Date, SC_Invoice, SC_Date, Cls1, Cls2, Cls3, Cls4, CounterId, Cur_Id, Cur_Rate, B_Amount, T_Amount, N_Amount, LN_Amount, V_Amount, Tbl_Amount, Tender_Amount, Return_Amount, Action_Type, In_Words, Remarks, R_Invoice, Cancel_By, Cancel_Date, Cancel_Remarks, Is_Printed, No_Print, Printed_By, Printed_Date, Audit_Lock, Enter_By, Enter_Date, Reconcile_By, Reconcile_Date, Auth_By, Auth_Date, Cleared_By, Cleared_Date, DoctorId, PatientId, HDepartmentId, MShipId, TableId, CBranch_Id, CUnit_Id, FiscalYearId, IsAPIPosted, IsRealtime, PAttachment1, PAttachment2, PAttachment3, PAttachment4, PAttachment5, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT sm.VCHRNO SB_Invoice, sm.TRNDATE Invoice_Date, sm.BSDATE Invoice_Miti, sm.TRNDATE+sm.TRNTIME Invoice_Time, NULL PB_Vno, NULL Vno_Date, NULL Vno_Miti, 1 Customer_Id, NULL PartyLedgerId, sm.BILLTO Party_Name, NULL Vat_No, NULL Contact_Person, sm.BILLTOMOB Mobile_No, sm.BILLTOADD Address, NULL ChqNo, NULL ChqDate, NULL ChqMiti, 'LOCAL' Invoice_Type, 'POS' Invoice_Mode, 'CASH' Payment_Mode, 0 DueDays, NULL DueDate, NULL Agent_Id, NULL Subledger_Id, NULL SO_Invoice, NULL SO_Date, NULL SC_Invoice, NULL SC_Date, NULL Cls1, NULL Cls2, NULL Cls3, NULL Cls4, 1 CounterId, 1 Cur_Id, 1 Cur_Rate, sm.NETAMNT B_Amount, 0 T_Amount, sm.NETAMNT N_Amount, sm.NETAMNT LN_Amount, sm.VATAMNT V_Amount, sm.VATAMNT / 0.13 Tbl_Amount, sm.TENDER Tender_Amount, sm.CHANGE Return_Amount, 'SAVE' Action_Type, (SELECT dbo.fNumToWords(sm.NETAMNT)) In_Words, sm.REMARKS Remarks, 0 R_Invoice, NULL Cancel_By, NULL Cancel_Date, NULL Cancel_Remarks, 0 Is_Printed, 0 No_Print, NULL Printed_By, NULL Printed_Date, 0 Audit_Lock, 'MrSolution' Enter_By, GETDATE() Enter_Date, NULL Reconcile_By, NULL Reconcile_Date, NULL Auth_By, NULL Auth_Date, NULL Cleared_By, NULL Cleared_Date, NULL DoctorId, NULL PatientId, NULL HDepartmentId, NULL MShipId, NULL TableId, 1 CBranch_Id, NULL CUnit_Id, fy.FY_Id FiscalYearId, 0 IsAPIPosted, 0 IsRealtime, NULL PAttachment1, NULL PAttachment2, NULL PAttachment3, NULL PAttachment4, NULL PAttachment5, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.ABBMAIN sm
     LEFT OUTER JOIN AMS.FiscalYear                    fy ON fy.BS_FY=sm.PhiscalID
WHERE sm.VCHRNO NOT IN (SELECT SB_Invoice FROM AMS.SB_Master);
INSERT INTO AMS.SB_Details (SB_Invoice, Invoice_SNo, P_Id, Gdn_Id, Alt_Qty, Alt_UnitId, Qty, Unit_Id, Rate, B_Amount, T_Amount, N_Amount, AltStock_Qty, Stock_Qty, Narration, SO_Invoice, SO_Sno, SC_Invoice, SC_SNo, Tax_Amount, V_Amount, V_Rate, Free_Unit_Id, Free_Qty, StockFree_Qty, ExtraFree_Unit_Id, ExtraFree_Qty, ExtraStockFree_Qty, T_Product, S_Ledger, SR_Ledger, SZ1, SZ2, SZ3, SZ4, SZ5, SZ6, SZ7, SZ8, SZ9, SZ10, Serial_No, Batch_No, Exp_Date, Manu_Date, MaterialPost, PDiscountRate, PDiscount, BDiscountRate, BDiscount, ServiceChargeRate, ServiceCharge, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT VCHRNO SB_Invoice, SNO Invoice_SNo, p.PID P_Id, NULL Gdn_Id, 0 Alt_Qty, NULL Alt_UnitId, sd.RealQty Qty, p.PUnit Unit_Id, sd.RATE, sd.AMOUNT B_Amount, mt.VAT-mt.DISAMOUNT T_Amount, sd.NETAMOUNT N_Amount, 0 AltStock_Qty, sd.RealQty Stock_Qty, NULL Narration, NULL SO_Invoice, NULL SO_Sno, NULL SC_Invoice, NULL SC_SNo, sd.TAXABLE Tax_Amount, sd.VAT V_Amount, CASE WHEN sd.ISVAT>0 THEN 13 ELSE 0 END V_Rate, NULL Free_Unit_Id, 0 Free_Qty, 0 StockFree_Qty, NULL ExtraFree_Unit_Id, 0 ExtraFree_Qty, 0 ExtraStockFree_Qty, sd.ISVAT T_Product, NULL S_Ledger, NULL SR_Ledger, NULL SZ1, NULL SZ2, NULL SZ3, NULL SZ4, NULL SZ5, NULL SZ6, NULL SZ7, NULL SZ8, NULL SZ9, NULL SZ10, 0 Serial_No, NULL Batch_No, 0 Exp_Date, NULL Manu_Date, NULL MaterialPost, mt.DISRATE PDiscountRate, sd.DISCOUNT PDiscount, 0 BDiscountRate, 0 BDiscount, 0 ServiceChargeRate, 0 ServiceCharge, NULL SyncBaseId, NULL SyncGlobalId, NULL SyncOriginId, NULL SyncCreatedOn, NULL SyncLastPatchedOn, 1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.ABBPROD                  sd
     LEFT OUTER JOIN [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.MENUITEM mt ON mt.MCODE=sd.MCODE
     LEFT OUTER JOIN AMS.Product                                        p ON p.PName=mt.DESCA
WHERE VCHRNO NOT IN (SELECT SB_Invoice FROM AMS.SB_Details);

INSERT INTO AMS.SB_Term (SB_VNo, ST_Id, SNo, Term_Type, Product_Id, Rate, Amount, Taxable, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT st.VCHRNO SB_VNo,1 ST_Id, st.SNO SNo, 'P' Term_Type,p.PID Product_Id,mt.DISRATE RATE,st.DISCOUNT AMOUNT,'N' TAXABLE,NULL SyncBaseId,NULL SyncGlobalId,NULL SyncOriginId,NULL SyncCreatedOn,NULL SyncLastPatchedOn,1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.ABBPROD                  st
     LEFT OUTER JOIN [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.MENUITEM mt ON mt.MCODE=st.MCODE
     LEFT OUTER JOIN AMS.Product                                        p ON p.PName=mt.DESCA
WHERE st.DISCOUNT>0 AND st.VCHRNO NOT IN (SELECT SB_VNo FROM AMS.SB_Term WHERE ST_Id = 1);

INSERT INTO AMS.SB_Term (SB_VNo, ST_Id, SNo, Term_Type, Product_Id, Rate, Amount, Taxable, SyncBaseId, SyncGlobalId, SyncOriginId, SyncCreatedOn, SyncLastPatchedOn, SyncRowVersion)
SELECT st.VCHRNO SB_VNo,4 ST_Id, st.SNO SNo, 'P' Term_Type,p.PID Product_Id,13 RATE,st.VAT AMOUNT,'N' TAXABLE,NULL SyncBaseId,NULL SyncGlobalId,NULL SyncOriginId,NULL SyncCreatedOn,NULL SyncLastPatchedOn,1 SyncRowVersion
FROM [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.ABBPROD                  st
     LEFT OUTER JOIN [DESKTOP-F726TKR\SQLEXPRESS].RRB_MART.dbo.MENUITEM mt ON mt.MCODE=st.MCODE
     LEFT OUTER JOIN AMS.Product                                        p ON p.PName=mt.DESCA
WHERE st.VAT>0 AND st.VCHRNO NOT IN (SELECT SB_VNo FROM AMS.SB_Term WHERE ST_Id = 4);

